7.6 Double Linked list are often easier to manipulate, because they allow sequential access to the list in both direction
7.6 given a node in the list, one can navigate easily in either direction
7.6 You can traverse the list both forward and backwards.
7.6 a doubly linked list allows you to back up from a node rather than having to go through the entire list again<br>
7.6 Gives faster times for some operations such as insertion and deletion
7.6 The primary disadvantage of doubly linked lists are that (1) each node requires an extra pointer, requiring more space, and (2) the insertion or deletion of a node takes a bit longer (more pointer operations).
